Snakes Final Write Up

We created a rudimentary user folder system using Rsync. There is a collection of user folders and accounts and one main template account. The template has a set of files intended for every new user. After a period of time, all new files will be deleted, all modified or removed files provided from the template account will be restored via Rsync.

Goals and methods of testing/verification
	Our main goal was to have a system for restoring a user folder to the default state after a period of time. We also wanted to prohibit users from being able to hide files in the world writeable temp directories or making files elsewhere on the system. Our goal was to perform these tasks via automation using Puppet, so that sys admins could simply add and remove files from the template directory if they wanted to alter the files provided to users. We verified this by having several rudimentary “hello world” files that the user was able to edit and play with, that we tested whether they would reset to their default state after a given period of time. We also created text files in the users' home directories and removed files to ensure that users had the proper permissions for their own home directories.  

Effect on its user population and user support issues
	Essentially all user folders are simply temporary “guest” folders. We have a message of the day upon access of the server that lets the user know that their changes are temporary and nothing is saved. The most obvious support issue is that users may not understand that their files and changes are simply temporary, and a “save” will only be temporary until the system is restored to its initial state. Other user support issues include the necessity for ensuring that if the programming learning environment is maintained, then sys admins will need to ensure that the proper compilers are up to date and available on the system for their users. Also, due to the set up that we chose to use, the cron jobs that "clean" the system occur at 11:00pm PST and the Puppet configuration that we used runs every 30 minutes. Since the cron job will revert the ownership of the users' home directories to root, there will be a 30 minute period from 11:00PM PST to 11:30PM PST where users will not be able to edit any files in their home directories due to lack of permissions.

Relevant Security Issues
	Possible security issues include the ability of the users to create malicious code within the learning environment and execute it. Sys admins will need to configure the proper alarms to ensure that if the system begins to act strangely, they will be notified and be able to shut down the system accordingly. Also, users will be able to navigate around the system to a certain extent, although they will not be able to edit or access most files. Users may also be able to trick our cleaning system using symbolic or hard links. It's possible that a user could create a link between one of the files in their home directory with a file belonging to the server and that the cron job which cleans the home directory could possibly clean that file as well. If the template directory is not stored in a secure place, it's possible that an attacker could alter the files stored there in a way that could potentially make the system vulnerable. 

Work necessary for completion and future automation and maintenance
	For this to be fully complete, there would need to be a fix for the 30 minute downtime from 11:00PM PST to 11:30PM PST which could be done by including a chown command to the cron job that uses rsync to re-sync users' home directories to the template directory. Also, one of the servers does not appear to be properly controlled by the Puppet Master, so work would need to be done to fix this issue. The way in which we implemented the system could be cleaned up in menial ways, but overall is mostly complete. Future maintenance would include adding and removing users as the user base changes and ensuring the software on the systems remains updated. 

	
Documentation of the project
	Documentation of this project is included in the GitHub folder 'Final Project'
